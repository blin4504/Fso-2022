{"ast":null,"code":"var _jsxFileName = \"/Users/brian/fso/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = _ref => {\n  let {\n    go\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", (good + neutral * 0 + bad * -1) / 3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", good / (good + neutral + bad) * 100, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const updateGood = () => setGood(good + 1);\n  const updateNeutral = () => setNeutral(neutral + 1);\n  const updateBad = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateGood,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateNeutral,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateBad,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","Statistics","go","good","neutral","bad","App","setGood","setNeutral","setBad","updateGood","updateNeutral","updateBad"],"sources":["/Users/brian/fso/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Statistics = ({go}) => {\n  return (\n    <>\n      <h1>statistics</h1>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {good + neutral + bad}</p>\n      <p>average {(good + neutral * 0 + bad * -1) / 3}</p>\n      <p>positive {(good / (good + neutral + bad)) * 100} %</p>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const updateGood = () => setGood(good + 1)\n  const updateNeutral = () => setNeutral(neutral + 1)\n  const updateBad = () => setBad(bad + 1)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={updateGood}>good</button>\n      <button onClick={updateNeutral}>neutral</button>\n      <button onClick={updateBad}>bad</button>\n      \n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAEhC,MAAMC,UAAU,GAAG,QAAU;EAAA,IAAT;IAACC;EAAE,CAAC;EACtB,oBACE;IAAA,wBACE;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eACnB;MAAA,WAAG,OAAK,EAACC,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB;MAAA,WAAG,UAAQ,EAACC,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAA,WAAG,MAAI,EAACC,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAChB;MAAA,WAAG,MAAI,EAACF,IAAI,GAAGC,OAAO,GAAGC,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACjC;MAAA,WAAG,UAAQ,EAAC,CAACF,IAAI,GAAGC,OAAO,GAAG,CAAC,GAAGC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACpD;MAAA,WAAG,WAAS,EAAEF,IAAI,IAAIA,IAAI,GAAGC,OAAO,GAAGC,GAAG,CAAC,GAAI,GAAG,EAAC,IAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA,gBACxD;AAEP,CAAC;AAAA,KAZKJ,UAAU;AAchB,MAAMK,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACH,IAAI,EAAEI,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACI,OAAO,EAAEI,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACK,GAAG,EAAEI,MAAM,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMU,UAAU,GAAG,MAAMH,OAAO,CAACJ,IAAI,GAAG,CAAC,CAAC;EAC1C,MAAMQ,aAAa,GAAG,MAAMH,UAAU,CAACJ,OAAO,GAAG,CAAC,CAAC;EACnD,MAAMQ,SAAS,GAAG,MAAMH,MAAM,CAACJ,GAAG,GAAG,CAAC,CAAC;EAEvC,oBACE;IAAA,wBACE;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB;MAAQ,OAAO,EAAEK,UAAW;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,eAC1C;MAAQ,OAAO,EAAEC,aAAc;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS,eAChD;MAAQ,OAAO,EAAEC,SAAU;MAAA,UAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAEpC;AAEV,CAAC;AAAA,GAnBKN,GAAG;AAAA,MAAHA,GAAG;AAqBT,eAAeA,GAAG;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}