{"ast":null,"code":"var _jsxFileName = \"/Users/brian/fso/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 42\n  }, this);\n};\n_c = StatisticLine;\nconst Statistics = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  if (good == 0 && neutral == 0 && bad == 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 14\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: g\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", (good + neutral * 0 + bad * -1) / 3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", good / (good + neutral + bad) * 100, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = Statistics;\nconst Button = _ref3 => {\n  let {\n    onClick,\n    text\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 37\n  }, this);\n};\n_c3 = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const updateGood = () => setGood(good + 1);\n  const updateNeutral = () => setNeutral(neutral + 1);\n  const updateBad = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: updateGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: updateNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: updateBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","StatisticLine","text","value","Statistics","good","neutral","bad","g","Button","onClick","App","setGood","setNeutral","setBad","updateGood","updateNeutral","updateBad"],"sources":["/Users/brian/fso/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst StatisticLine = ({text, value}) => <p>{text} {value}</p>\n\n\nconst Statistics = ({good, neutral, bad}) => {\n  if (good == 0 && neutral == 0 && bad == 0) {\n    return <><p>No feedback given</p></>\n  }\n  return (\n    <>\n      <StatisticLine text=\"good\" value={good} />\n      <StatisticLine text=\"neutral\" value={g} />\n      <StatisticLine text=\"good\" value={good} />\n      <StatisticLine text=\"good\" value={good} />\n      <StatisticLine text=\"good\" value={good} />\n      <StatisticLine text=\"good\" value={good} />\n\n      <p>all {good + neutral + bad}</p>\n      <p>average {(good + neutral * 0 + bad * -1) / 3}</p>\n      <p>positive {(good / (good + neutral + bad)) * 100} %</p>\n    </>\n  )\n}\n\nconst Button = ({onClick, text}) => <button onClick={onClick}>{text}</button>\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const updateGood = () => setGood(good + 1)\n  const updateNeutral = () => setNeutral(neutral + 1)\n  const updateBad = () => setBad(bad + 1)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button onClick={updateGood} text=\"good\" />\n      <Button onClick={updateNeutral} text=\"neutral\" />\n      <Button onClick={updateBad} text=\"bad\" />\n      <h1>statistics</h1>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}