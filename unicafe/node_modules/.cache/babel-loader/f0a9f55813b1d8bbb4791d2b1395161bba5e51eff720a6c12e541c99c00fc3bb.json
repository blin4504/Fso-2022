{"ast":null,"code":"var _jsxFileName = \"/Users/brian/fso/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = StatisticLine;\nconst Statistics = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  const all = good + neutral + bad;\n  const avg = (good - bad) / all;\n  const pos = good / all * 100;\n  if (good == 0 && neutral == 0 && bad == 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: avg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"positive\",\n      value: good / all * 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = Statistics;\nconst Button = _ref3 => {\n  let {\n    onClick,\n    text\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 37\n  }, this);\n};\n_c3 = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const updateGood = () => setGood(good + 1);\n  const updateNeutral = () => setNeutral(neutral + 1);\n  const updateBad = () => setBad(bad + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: updateGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: updateNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: updateBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","StatisticLine","text","value","Statistics","good","neutral","bad","all","avg","pos","Button","onClick","App","setGood","setNeutral","setBad","updateGood","updateNeutral","updateBad"],"sources":["/Users/brian/fso/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst StatisticLine = ({text, value}) => {\n  return (\n    <>\n      <table>\n        <tr>\n          <td>{text}</td>\n          <td>{value}</td>\n        </tr>\n      </table>\n    </>\n  )\n}\n\n\nconst Statistics = ({good, neutral, bad}) => {\n  const all = good + neutral + bad\n  const avg = (good - bad) / (all)\n  const pos = (good / (all)) * 100\n  if (good == 0 && neutral == 0 && bad == 0) {\n    return <><p>No feedback given</p></>\n  }\n  return (\n    <>\n      <StatisticLine text=\"good\" value={good} />\n      <StatisticLine text=\"neutral\" value={neutral} />\n      <StatisticLine text=\"bad\" value={bad} />\n      <StatisticLine text=\"all\" value={all} />\n      <StatisticLine text=\"average\" value={avg} />\n      <StatisticLine text=\"positive\" value={(good / (all)) * 100 } />\n    </>\n  )\n}\n\nconst Button = ({onClick, text}) => <button onClick={onClick}>{text}</button>\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const updateGood = () => setGood(good + 1)\n  const updateNeutral = () => setNeutral(neutral + 1)\n  const updateBad = () => setBad(bad + 1)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button onClick={updateGood} text=\"good\" />\n      <Button onClick={updateNeutral} text=\"neutral\" />\n      <Button onClick={updateBad} text=\"bad\" />\n      <h1>statistics</h1>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}